# This file was generated by GoReleaser. DO NOT EDIT.
cask "ccin" do
  desc "An advanced CLI for generating CRUD applications with modular architecture"
  homepage "https://github.com/chrisloarryn/homebrew-ccin"
  version "0.0.11"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "ccin"

  on_macos do
    url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.11/ccin_Darwin_all.tar.gz"
    sha256 "4331709f25534c0c90b15236dbed7cf4572faa6ce0f1c6a5e29ed9eb3208c55f"
  end

  on_linux do
    on_intel do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.11/ccin_Linux_x86_64.tar.gz"
      sha256 "858771426d0f34e019b3e7c05d7aaa4c896438feb43e0c44e234e284ab30885f"
    end
    on_arm do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.11/ccin_Linux_arm64.tar.gz"
      sha256 "b13a7f7eb5230dab972d45af0e6332ba4a5a89d04f1ad7a538906ad99f458277"
    end
  end

  postflight do
    if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
      system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/ccin"]
    end
  end

  caveats do
    "After installation, you can use ccin to generate CRUD applications:"
    "  ccin generate nestjs my-api --domain user"
    "  ccin generate go-gin my-gin-api --domain product --grpc"
    "  ccin generate go-fiber my-fiber-api --domain order"
  end

  # No zap stanza required
end
